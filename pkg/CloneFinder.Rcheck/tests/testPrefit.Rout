
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(CloneFinder)
> 
> set.seed(363453)
> 
> # generate the markers explicitly
> nSeg <- 1000
> markers <- round(runif(nSeg, 25, 1000))
> # Centers needed to define the pure structure
> xy <- data.frame(x = c(.2, .7, .8, .1, .4),
+                  y = c(.2, .3, .5, .9, .7))
> # start by creating the compartment model
> baseModel <- CompartmentModel(markers, xy, sigma0=0.25)
> rm(xy, nSeg, markers)
> 
> # Now we set up an abstract tumnor
> wts <- rev(5^(1:5))
> wts <- wts/sum(wts)
> fracs <- c(5, 3, 1)
> TrueNclones <- length(fracs)
> # now simulate a tumor; length of 'fracs' in first argument is number of clones
> tumor <- Tumor(baseModel, fracs, wts)
> rm(wts, fracs, baseModel)
> ls()
[1] "TrueNclones" "tumor"      
> 
> # simulate data by selecting the weighted means with appropriate
> # standard error of the mean
> simdata <- generateData(tumor)
> 
> firstPass <- PrefitCloneModel(simdata)
There were 50 or more warnings (use warnings() to see the first 50)
> plot(firstPass)
> hist(firstPass, breaks=123)
> summary(firstPass)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      1       1       1       1       1       1 
> 
> secondPass <- updatePhiVectors(firstPass)
There were 50 or more warnings (use warnings() to see the first 50)
> plot(secondPass)
> hist(secondPass, breaks=56)
> summary(secondPass)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      1       1       1       1       1       1 
> 
> proc.time()
   user  system elapsed 
  20.32    0.25   20.61 
