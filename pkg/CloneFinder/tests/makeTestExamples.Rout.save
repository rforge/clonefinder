
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> if (packageVersion("CloneFinder") < "0.8.7") {
+   stop("You need to update 'CloneFinder'.")
+ }
> library("CloneFinder")
> 
> psiSets <- list(c(1),                     # only one clone
+                 c(0.7, 0.3),              # two clones
+                 c(0.6, 0.25, 0.15),       # three clones
+                 c(0.5, 0.25, 0.15, 0.10)) # four clones
> 
> paramSets <- data.frame(nu = rep(c(0, 100, 100), each = 2),
+                         pcnv = rep(c(1, 0.5, 0), each = 2),
+                         norm.contam = rep(c(TRUE, FALSE), times = 3))
> 
> paramSets <- data.frame(nu = rep(c(0, 100, 100)),
+                         pcnv = rep(c(1, 0.5, 0)))
> 
> set.seed(20248)
> simData <- list()
> for (psi in psiSets) {
+   cat("Working on psi =", psi, "\n", file=stderr())
+   for (J in 1:nrow(paramSets)) {
+     cat("Working on set J =", J, "\n", file=stderr())
+     tumor <- Tumor(psi, rounds = 400,
+                    cnmax = 4,
+                    nu = paramSets$nu[J],
+                    pcnv = paramSets$pcnv[J],
+                    norm.contam = FALSE)
+     dset <- generateTumorData(tumor,
+                               snps.seq = 10000,
+                               snps.cgh = 600000,
+                               mu = 70,
+                               sigma.reads = 25,
+                               sigma0.lrr = 0.15, 
+                               sigma0.baf = 0.03,
+                               density.sigma = 0.1)
+     simData[[1 + length(simData)]] <- list(tumor = tumor,
+                                            dset = dset,
+                                            psi = psi,
+                                            params = paramSets[J,])
+   }
+ }
Working on psi = 1 
Working on set J = 1 
Working on set J = 2 
Working on set J = 3 
Working on psi = 0.7 0.3 
Working on set J = 1 
Working on set J = 2 
Working on set J = 3 
Working on psi = 0.6 0.25 0.15 
Working on set J = 1 
Working on set J = 2 
Working on set J = 3 
Working on psi = 0.5 0.25 0.15 0.1 
Working on set J = 1 
Working on set J = 2 
Working on set J = 3 
> length(simData)
[1] 12
> 
> #########################################
> ### Restart here
> psis.20 <- generateSimplex(20,5)
> cnmodels <- as.matrix(expand.grid(lapply(1:5, function(i){ 0:5 })))
> pars <- list(sigma0=5, theta = 0.9, ktheta = 0.3, mtheta = 0.9,
+              alpha = 0.5, thresh = 0.04, cutoff = 100, Q = 100, iters = 4)
> 
> 
> #for (J in 1:length(simData)) {
> for (J in 1:3) {
+   cat("Dataset", J, "\n", file=stdout())
+   dset <- simData[[J]]$dset
+   ra <- try( runAlg(dset$cn.data, dset$seq.data,
+                     cnmodels, psis.20,
+                     pars = pars, imputedCN = NULL) )
+   if (inherits(ra, "try-error")) {
+     cat(ra, "\n", stdout())
+   } else {
+     cat("psi:\n")
+     print(ra$psi)
+     cat("A,B:\n")
+     print(ra$A)
+     print(ra$B)
+     cat("eta:\n")
+     print(ra$etaA)
+     print(ra$etaB)
+     print(lapply(ra$indices, summary))
+     print(lapply(ra$filtered.data, summary))
+     print(summary(ra$mutated))
+     print(summary(ra$psiPosts))
+   }
+ }
Dataset 1 
psi:
[1] 1 0 0 0 0
A,B:
    1        
61  0 0 0 0 0
173 0 0 0 0 0
241 2 0 0 0 0
    2        
61  1 0 0 0 0
173 1 0 0 0 0
241 1 0 0 0 0
eta:
[1] 0 0 2
[1] 1 1 1
$indices.cn
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   61.0   117.0   173.0   158.3   207.0   241.0 

$mutids.filt
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
                                                

$mutdata.filt
      chr           seg          mut.id      refCounts     varCounts  
 Min.   : NA   Min.   : NA   Min.   : NA   Min.   : NA   Min.   : NA  
 1st Qu.: NA   1st Qu.: NA   1st Qu.: NA   1st Qu.: NA   1st Qu.: NA  
 Median : NA   Median : NA   Median : NA   Median : NA   Median : NA  
 Mean   :NaN   Mean   :NaN   Mean   :NaN   Mean   :NaN   Mean   :NaN  
 3rd Qu.: NA   3rd Qu.: NA   3rd Qu.: NA   3rd Qu.: NA   3rd Qu.: NA  
 Max.   : NA   Max.   : NA   Max.   : NA   Max.   : NA   Max.   : NA  
      VAF       totalCounts     status         
 Min.   : NA   Min.   : NA   Length:0          
 1st Qu.: NA   1st Qu.: NA   Class :character  
 Median : NA   Median : NA   Mode  :character  
 Mean   :NaN   Mean   :NaN                     
 3rd Qu.: NA   3rd Qu.: NA                     
 Max.   : NA   Max.   : NA                     

$cndata.filt
      chr            seg             LRR                BAF           
 Min.   : 3.0   Min.   : 61.0   Min.   :-0.30261   Min.   :0.0003174  
 1st Qu.: 7.5   1st Qu.:117.0   1st Qu.:-0.29955   1st Qu.:0.0004459  
 Median :12.0   Median :173.0   Median :-0.29650   Median :0.0005745  
 Mean   :12.0   Mean   :158.3   Mean   :-0.14177   Mean   :0.2225747  
 3rd Qu.:16.5   3rd Qu.:207.0   3rd Qu.:-0.06135   3rd Qu.:0.3337033  
 Max.   :21.0   Max.   :241.0   Max.   : 0.17380   Max.   :0.6668322  
       X                   Y             markers    
 Min.   :0.0003207   Min.   :0.9942   Min.   :1645  
 1st Qu.:0.0004466   1st Qu.:0.9950   1st Qu.:1928  
 Median :0.0005724   Median :0.9958   Median :2212  
 Mean   :0.6636246   Mean   :1.0001   Mean   :2051  
 3rd Qu.:0.9952765   3rd Qu.:1.0030   3rd Qu.:2254  
 Max.   :1.9899805   Max.   :1.0102   Max.   :2295  

   Mode    NA's 
logical       1 
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
-29.036 -13.489   1.230  -5.171   1.230   1.230 
Dataset 2 
psi:
[1] 0.80 0.05 0.05 0.05 0.05
A,B:
    Var1 Var2 Var3 Var4 Var5
109    0    1    1    1    1
257    2    1    1    1    1
309    2    1    1    1    1
    Var1 Var2 Var3 Var4 Var5
109    1    1    1    1    1
257    1    1    1    1    1
309    1    1    1    1    1
eta:
[1] 0.2 1.8 1.8
[1] 1 1 1
$indices.cn
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    109     183     257     225     283     309 

$mutids.filt
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      1    1848    7142    7429    9574   21603 

$mutdata.filt
      chr              seg            mut.id        refCounts     
 Min.   : 1.000   Min.   :  1.0   Min.   :    1   Min.   : 25.00  
 1st Qu.: 4.000   1st Qu.: 86.0   1st Qu.: 1848   1st Qu.: 61.00  
 Median : 9.000   Median :195.0   Median : 7142   Median : 69.00  
 Mean   : 9.798   Mean   :188.7   Mean   : 7429   Mean   : 69.71  
 3rd Qu.:15.000   3rd Qu.:288.0   3rd Qu.: 9574   3rd Qu.: 79.00  
 Max.   :24.000   Max.   :382.0   Max.   :21603   Max.   :116.00  
   varCounts           VAF          totalCounts       status         
 Min.   : 29.00   Min.   :0.3222   Min.   : 62.0   Length:630        
 1st Qu.: 59.00   1st Qu.:0.4661   1st Qu.:121.0   Class :character  
 Median : 69.00   Median :0.4961   Median :138.5   Mode  :character  
 Mean   : 68.89   Mean   :0.4968   Mean   :138.6                     
 3rd Qu.: 79.00   3rd Qu.:0.5274   3rd Qu.:156.0                     
 Max.   :112.00   Max.   :0.6389   Max.   :216.0                     

$cndata.filt
      chr             seg           LRR                BAF           
 Min.   : 5.00   Min.   :109   Min.   :-0.29924   Min.   :0.0008648  
 1st Qu.: 8.50   1st Qu.:183   1st Qu.:-0.06588   1st Qu.:0.3335650  
 Median :12.00   Median :257   Median : 0.16747   Median :0.6662652  
 Mean   :11.33   Mean   :225   Mean   : 0.01416   Mean   :0.4448851  
 3rd Qu.:14.50   3rd Qu.:283   3rd Qu.: 0.17086   3rd Qu.:0.6668952  
 Max.   :17.00   Max.   :309   Max.   : 0.17425   Max.   :0.6675252  
       X                   Y             markers    
 Min.   :0.0008683   Min.   :0.9778   Min.   :1058  
 1st Qu.:0.9820478   1st Qu.:0.9874   1st Qu.:1301  
 Median :1.9632272   Median :0.9970   Median :1544  
 Mean   :1.3181463   Mean   :0.9927   Mean   :1426  
 3rd Qu.:1.9767852   3rd Qu.:1.0001   3rd Qu.:1610  
 Max.   :1.9903432   Max.   :1.0033   Max.   :1675  

       V1          V2               V3               V4        
 Min.   :1   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  
 1st Qu.:1   1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:1.0000  
 Median :1   Median :1.0000   Median :1.0000   Median :1.0000  
 Mean   :1   Mean   :0.9873   Mean   :0.9857   Mean   :0.9857  
 3rd Qu.:1   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  
 Max.   :1   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  
       V5        
 Min.   :0.0000  
 1st Qu.:1.0000  
 Median :1.0000  
 Mean   :0.9857  
 3rd Qu.:1.0000  
 Max.   :1.0000  
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  -2089   -2075   -2072   -2072   -2067   -2066 
Dataset 3 
Error in etaList[[x.numbers[l]]] : 
  attempt to select less than one element in get1index
In addition: Warning message:
In max(post) : no non-missing arguments to max; returning -Inf
Error in etaList[[x.numbers[l]]] : 
  attempt to select less than one element in get1index
 
 1> 
> if (FALSE) {
+ J <- 2
+ dset <- simData[[J]]$dset
+ Rprof("profile2.txt")
+ ra <- findClones(dset$cn.data, dset$seq.data,
+                  cnmodels, psis.20,
+                  pars = pars, imputedCN = NULL)
+ Rprof(NULL)
+ 
+ snpdata <- dset$cn.data
+ cnfilt <- CloneFinder:::filterCN(snpdata, pars$thresh)
+ cndata.filt <- cnfilt$mat #Param 1#
+ 
+ seqdata <- dset$seq.data
+ if(nrow(seqdata) > 0) {
+   read.den <- density(seqdata$refCounts)
+   peak <- read.den$x[which.max(read.den$y)]
+   mu <- peak
+   pars$mu <- mu
+   pars$sigma.counts <- sd(seqdata$refCounts)
+ }
+ mutdata <- seqdata[seqdata$status=='somatic',]
+ mut.filt <- CloneFinder:::filterMutations(mutdata, mu=mu, threshold=3)
+ mutdata.filt <- mut.filt$mat #param 2#
+ mutids.filt<- mut.filt$ids
+ kPriors <- dgeom((1:5)-1, prob=pars$ktheta, log=TRUE) #param 7#
+ psis <- psis.20 #param 3#
+ cnmax <- 5 #param 6#
+ #param 4 is cnmodels#
+ #param 5 is pars#
+ 
+ 
+ for (psi in psiSets) {
+   cat("Working on psi =", psi, "\n", file=stdout())
+   for (J in 1:nrow(paramSets)) {
+     print(paramSets[J,])
+     tumor <- Tumor(psi, rounds = 400,
+                    cnmax = 4,
+                    nu = paramSets$nu[J],
+                    pcnv = paramSets$pcnv[J],
+                    norm.contam = paramSets$norm.contam[J])
+     seq.clones <- lapply(1:length(tumor@clones), function(i){tumor@clones[[i]]$seq})
+     print(out <- class(seq.clones[[1]]))
+     temp <- data.frame(paramSets[J,], nClones = length(psi), Class=out)
+     if (exists("results")) {
+       results <- rbind(results, temp)
+     } else {
+       results <- temp
+     }
+   }
+ }
+ results[order(results$Class),]
+ }
> 
> proc.time()
   user  system elapsed 
 949.18    0.10  949.46 
